/*
UnoLLM

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
	"encoding/json"
	"fmt"
)

// checks if the KeyStoreKeysGet200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStoreKeysGet200ResponseInner{}

// KeyStoreKeysGet200ResponseInner struct for KeyStoreKeysGet200ResponseInner
type KeyStoreKeysGet200ResponseInner struct {
	Id       int32          `json:"id"`
	Key      string         `json:"key"`
	Provider string         `json:"provider"`
	Endpoint NullableString `json:"endpoint,omitempty"`
}

type _KeyStoreKeysGet200ResponseInner KeyStoreKeysGet200ResponseInner

// NewKeyStoreKeysGet200ResponseInner instantiates a new KeyStoreKeysGet200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStoreKeysGet200ResponseInner(id int32, key string, provider string) *KeyStoreKeysGet200ResponseInner {
	this := KeyStoreKeysGet200ResponseInner{}
	this.Id = id
	this.Key = key
	this.Provider = provider
	return &this
}

// NewKeyStoreKeysGet200ResponseInnerWithDefaults instantiates a new KeyStoreKeysGet200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStoreKeysGet200ResponseInnerWithDefaults() *KeyStoreKeysGet200ResponseInner {
	this := KeyStoreKeysGet200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *KeyStoreKeysGet200ResponseInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KeyStoreKeysGet200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KeyStoreKeysGet200ResponseInner) SetId(v int32) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *KeyStoreKeysGet200ResponseInner) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyStoreKeysGet200ResponseInner) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyStoreKeysGet200ResponseInner) SetKey(v string) {
	o.Key = v
}

// GetProvider returns the Provider field value
func (o *KeyStoreKeysGet200ResponseInner) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *KeyStoreKeysGet200ResponseInner) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *KeyStoreKeysGet200ResponseInner) SetProvider(v string) {
	o.Provider = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyStoreKeysGet200ResponseInner) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint.Get()) {
		var ret string
		return ret
	}
	return *o.Endpoint.Get()
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyStoreKeysGet200ResponseInner) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Endpoint.Get(), o.Endpoint.IsSet()
}

// HasEndpoint returns a boolean if a field has been set.
func (o *KeyStoreKeysGet200ResponseInner) HasEndpoint() bool {
	if o != nil && o.Endpoint.IsSet() {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given NullableString and assigns it to the Endpoint field.
func (o *KeyStoreKeysGet200ResponseInner) SetEndpoint(v string) {
	o.Endpoint.Set(&v)
}

// SetEndpointNil sets the value for Endpoint to be an explicit nil
func (o *KeyStoreKeysGet200ResponseInner) SetEndpointNil() {
	o.Endpoint.Set(nil)
}

// UnsetEndpoint ensures that no value is present for Endpoint, not even an explicit nil
func (o *KeyStoreKeysGet200ResponseInner) UnsetEndpoint() {
	o.Endpoint.Unset()
}

func (o KeyStoreKeysGet200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStoreKeysGet200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	toSerialize["provider"] = o.Provider
	if o.Endpoint.IsSet() {
		toSerialize["endpoint"] = o.Endpoint.Get()
	}
	return toSerialize, nil
}

func (o *KeyStoreKeysGet200ResponseInner) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"key",
		"provider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyStoreKeysGet200ResponseInner := _KeyStoreKeysGet200ResponseInner{}

	err = json.Unmarshal(bytes, &varKeyStoreKeysGet200ResponseInner)

	if err != nil {
		return err
	}

	*o = KeyStoreKeysGet200ResponseInner(varKeyStoreKeysGet200ResponseInner)

	return err
}

type NullableKeyStoreKeysGet200ResponseInner struct {
	value *KeyStoreKeysGet200ResponseInner
	isSet bool
}

func (v NullableKeyStoreKeysGet200ResponseInner) Get() *KeyStoreKeysGet200ResponseInner {
	return v.value
}

func (v *NullableKeyStoreKeysGet200ResponseInner) Set(val *KeyStoreKeysGet200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStoreKeysGet200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStoreKeysGet200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStoreKeysGet200ResponseInner(val *KeyStoreKeysGet200ResponseInner) *NullableKeyStoreKeysGet200ResponseInner {
	return &NullableKeyStoreKeysGet200ResponseInner{value: val, isSet: true}
}

func (v NullableKeyStoreKeysGet200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStoreKeysGet200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
