/*
UnoLLM

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
	"encoding/json"
	"fmt"
)

// checks if the KeyStoreAddKeyPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStoreAddKeyPostRequest{}

// KeyStoreAddKeyPostRequest struct for KeyStoreAddKeyPostRequest
type KeyStoreAddKeyPostRequest struct {
	Key string `json:"key"`
	// ChatGLM | ChatGPT
	Provider string         `json:"provider"`
	Endpoint NullableString `json:"endpoint,omitempty"`
}

type _KeyStoreAddKeyPostRequest KeyStoreAddKeyPostRequest

// NewKeyStoreAddKeyPostRequest instantiates a new KeyStoreAddKeyPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStoreAddKeyPostRequest(key string, provider string) *KeyStoreAddKeyPostRequest {
	this := KeyStoreAddKeyPostRequest{}
	this.Key = key
	this.Provider = provider
	return &this
}

// NewKeyStoreAddKeyPostRequestWithDefaults instantiates a new KeyStoreAddKeyPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStoreAddKeyPostRequestWithDefaults() *KeyStoreAddKeyPostRequest {
	this := KeyStoreAddKeyPostRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *KeyStoreAddKeyPostRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyStoreAddKeyPostRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyStoreAddKeyPostRequest) SetKey(v string) {
	o.Key = v
}

// GetProvider returns the Provider field value
func (o *KeyStoreAddKeyPostRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *KeyStoreAddKeyPostRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *KeyStoreAddKeyPostRequest) SetProvider(v string) {
	o.Provider = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyStoreAddKeyPostRequest) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint.Get()) {
		var ret string
		return ret
	}
	return *o.Endpoint.Get()
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyStoreAddKeyPostRequest) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Endpoint.Get(), o.Endpoint.IsSet()
}

// HasEndpoint returns a boolean if a field has been set.
func (o *KeyStoreAddKeyPostRequest) HasEndpoint() bool {
	if o != nil && o.Endpoint.IsSet() {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given NullableString and assigns it to the Endpoint field.
func (o *KeyStoreAddKeyPostRequest) SetEndpoint(v string) {
	o.Endpoint.Set(&v)
}

// SetEndpointNil sets the value for Endpoint to be an explicit nil
func (o *KeyStoreAddKeyPostRequest) SetEndpointNil() {
	o.Endpoint.Set(nil)
}

// UnsetEndpoint ensures that no value is present for Endpoint, not even an explicit nil
func (o *KeyStoreAddKeyPostRequest) UnsetEndpoint() {
	o.Endpoint.Unset()
}

func (o KeyStoreAddKeyPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStoreAddKeyPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["provider"] = o.Provider
	if o.Endpoint.IsSet() {
		toSerialize["endpoint"] = o.Endpoint.Get()
	}
	return toSerialize, nil
}

func (o *KeyStoreAddKeyPostRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
		"provider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyStoreAddKeyPostRequest := _KeyStoreAddKeyPostRequest{}

	err = json.Unmarshal(bytes, &varKeyStoreAddKeyPostRequest)

	if err != nil {
		return err
	}

	*o = KeyStoreAddKeyPostRequest(varKeyStoreAddKeyPostRequest)

	return err
}

type NullableKeyStoreAddKeyPostRequest struct {
	value *KeyStoreAddKeyPostRequest
	isSet bool
}

func (v NullableKeyStoreAddKeyPostRequest) Get() *KeyStoreAddKeyPostRequest {
	return v.value
}

func (v *NullableKeyStoreAddKeyPostRequest) Set(val *KeyStoreAddKeyPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStoreAddKeyPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStoreAddKeyPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStoreAddKeyPostRequest(val *KeyStoreAddKeyPostRequest) *NullableKeyStoreAddKeyPostRequest {
	return &NullableKeyStoreAddKeyPostRequest{value: val, isSet: true}
}

func (v NullableKeyStoreAddKeyPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStoreAddKeyPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
