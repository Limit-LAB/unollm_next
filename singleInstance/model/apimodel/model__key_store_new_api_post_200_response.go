/*
UnoLLM

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
	"encoding/json"
	"fmt"
)

// checks if the KeyStoreNewApiPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStoreNewApiPost200Response{}

// KeyStoreNewApiPost200Response struct for KeyStoreNewApiPost200Response
type KeyStoreNewApiPost200Response struct {
	Id  int32  `json:"id"`
	Key string `json:"key"`
}

type _KeyStoreNewApiPost200Response KeyStoreNewApiPost200Response

// NewKeyStoreNewApiPost200Response instantiates a new KeyStoreNewApiPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStoreNewApiPost200Response(id int32, key string) *KeyStoreNewApiPost200Response {
	this := KeyStoreNewApiPost200Response{}
	this.Id = id
	this.Key = key
	return &this
}

// NewKeyStoreNewApiPost200ResponseWithDefaults instantiates a new KeyStoreNewApiPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStoreNewApiPost200ResponseWithDefaults() *KeyStoreNewApiPost200Response {
	this := KeyStoreNewApiPost200Response{}
	return &this
}

// GetId returns the Id field value
func (o *KeyStoreNewApiPost200Response) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KeyStoreNewApiPost200Response) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KeyStoreNewApiPost200Response) SetId(v int32) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *KeyStoreNewApiPost200Response) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyStoreNewApiPost200Response) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyStoreNewApiPost200Response) SetKey(v string) {
	o.Key = v
}

func (o KeyStoreNewApiPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStoreNewApiPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["key"] = o.Key
	return toSerialize, nil
}

func (o *KeyStoreNewApiPost200Response) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyStoreNewApiPost200Response := _KeyStoreNewApiPost200Response{}

	err = json.Unmarshal(bytes, &varKeyStoreNewApiPost200Response)

	if err != nil {
		return err
	}

	*o = KeyStoreNewApiPost200Response(varKeyStoreNewApiPost200Response)

	return err
}

type NullableKeyStoreNewApiPost200Response struct {
	value *KeyStoreNewApiPost200Response
	isSet bool
}

func (v NullableKeyStoreNewApiPost200Response) Get() *KeyStoreNewApiPost200Response {
	return v.value
}

func (v *NullableKeyStoreNewApiPost200Response) Set(val *KeyStoreNewApiPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStoreNewApiPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStoreNewApiPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStoreNewApiPost200Response(val *KeyStoreNewApiPost200Response) *NullableKeyStoreNewApiPost200Response {
	return &NullableKeyStoreNewApiPost200Response{value: val, isSet: true}
}

func (v NullableKeyStoreNewApiPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStoreNewApiPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
