/*
UnoLLM

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
	"encoding/json"
	"fmt"
)

// checks if the KeyStoreTestTransformerPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStoreTestTransformerPostRequest{}

// KeyStoreTestTransformerPostRequest struct for KeyStoreTestTransformerPostRequest
type KeyStoreTestTransformerPostRequest struct {
	Key      string `json:"key"`
	Provider string `json:"provider"`
}

type _KeyStoreTestTransformerPostRequest KeyStoreTestTransformerPostRequest

// NewKeyStoreTestTransformerPostRequest instantiates a new KeyStoreTestTransformerPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStoreTestTransformerPostRequest(key string, provider string) *KeyStoreTestTransformerPostRequest {
	this := KeyStoreTestTransformerPostRequest{}
	this.Key = key
	this.Provider = provider
	return &this
}

// NewKeyStoreTestTransformerPostRequestWithDefaults instantiates a new KeyStoreTestTransformerPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStoreTestTransformerPostRequestWithDefaults() *KeyStoreTestTransformerPostRequest {
	this := KeyStoreTestTransformerPostRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *KeyStoreTestTransformerPostRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyStoreTestTransformerPostRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyStoreTestTransformerPostRequest) SetKey(v string) {
	o.Key = v
}

// GetProvider returns the Provider field value
func (o *KeyStoreTestTransformerPostRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *KeyStoreTestTransformerPostRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *KeyStoreTestTransformerPostRequest) SetProvider(v string) {
	o.Provider = v
}

func (o KeyStoreTestTransformerPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStoreTestTransformerPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["provider"] = o.Provider
	return toSerialize, nil
}

func (o *KeyStoreTestTransformerPostRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"key",
		"provider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyStoreTestTransformerPostRequest := _KeyStoreTestTransformerPostRequest{}

	err = json.Unmarshal(bytes, &varKeyStoreTestTransformerPostRequest)

	if err != nil {
		return err
	}

	*o = KeyStoreTestTransformerPostRequest(varKeyStoreTestTransformerPostRequest)

	return err
}

type NullableKeyStoreTestTransformerPostRequest struct {
	value *KeyStoreTestTransformerPostRequest
	isSet bool
}

func (v NullableKeyStoreTestTransformerPostRequest) Get() *KeyStoreTestTransformerPostRequest {
	return v.value
}

func (v *NullableKeyStoreTestTransformerPostRequest) Set(val *KeyStoreTestTransformerPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStoreTestTransformerPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStoreTestTransformerPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStoreTestTransformerPostRequest(val *KeyStoreTestTransformerPostRequest) *NullableKeyStoreTestTransformerPostRequest {
	return &NullableKeyStoreTestTransformerPostRequest{value: val, isSet: true}
}

func (v NullableKeyStoreTestTransformerPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStoreTestTransformerPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
