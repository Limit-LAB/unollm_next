/*
UnoLLM

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apimodel

import (
	"encoding/json"
	"fmt"
)

// checks if the KeyStoreMapToPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyStoreMapToPostRequest{}

// KeyStoreMapToPostRequest struct for KeyStoreMapToPostRequest
type KeyStoreMapToPostRequest struct {
	// APIKey的ID
	Keys []int32 `json:"keys"`
	// 目标Key
	MapTo int32 `json:"mapTo"`
}

type _KeyStoreMapToPostRequest KeyStoreMapToPostRequest

// NewKeyStoreMapToPostRequest instantiates a new KeyStoreMapToPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyStoreMapToPostRequest(keys []int32, mapTo int32) *KeyStoreMapToPostRequest {
	this := KeyStoreMapToPostRequest{}
	this.Keys = keys
	this.MapTo = mapTo
	return &this
}

// NewKeyStoreMapToPostRequestWithDefaults instantiates a new KeyStoreMapToPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyStoreMapToPostRequestWithDefaults() *KeyStoreMapToPostRequest {
	this := KeyStoreMapToPostRequest{}
	return &this
}

// GetKeys returns the Keys field value
func (o *KeyStoreMapToPostRequest) GetKeys() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value
// and a boolean to check if the value has been set.
func (o *KeyStoreMapToPostRequest) GetKeysOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Keys, true
}

// SetKeys sets field value
func (o *KeyStoreMapToPostRequest) SetKeys(v []int32) {
	o.Keys = v
}

// GetMapTo returns the MapTo field value
func (o *KeyStoreMapToPostRequest) GetMapTo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MapTo
}

// GetMapToOk returns a tuple with the MapTo field value
// and a boolean to check if the value has been set.
func (o *KeyStoreMapToPostRequest) GetMapToOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapTo, true
}

// SetMapTo sets field value
func (o *KeyStoreMapToPostRequest) SetMapTo(v int32) {
	o.MapTo = v
}

func (o KeyStoreMapToPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyStoreMapToPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keys"] = o.Keys
	toSerialize["mapTo"] = o.MapTo
	return toSerialize, nil
}

func (o *KeyStoreMapToPostRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"keys",
		"mapTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyStoreMapToPostRequest := _KeyStoreMapToPostRequest{}

	err = json.Unmarshal(bytes, &varKeyStoreMapToPostRequest)

	if err != nil {
		return err
	}

	*o = KeyStoreMapToPostRequest(varKeyStoreMapToPostRequest)

	return err
}

type NullableKeyStoreMapToPostRequest struct {
	value *KeyStoreMapToPostRequest
	isSet bool
}

func (v NullableKeyStoreMapToPostRequest) Get() *KeyStoreMapToPostRequest {
	return v.value
}

func (v *NullableKeyStoreMapToPostRequest) Set(val *KeyStoreMapToPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyStoreMapToPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyStoreMapToPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyStoreMapToPostRequest(val *KeyStoreMapToPostRequest) *NullableKeyStoreMapToPostRequest {
	return &NullableKeyStoreMapToPostRequest{value: val, isSet: true}
}

func (v NullableKeyStoreMapToPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyStoreMapToPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
